// 1. Import the express module
import express from "express";

// 12. import bodyparser middleware
//     yarn add body-paser
import bodyParser from "body-parser";

// 14. import mongoose
import mongoose from "mongoose";

// 15.  odbc
mongoose.connect('mongodb://localhost/q2-contact-list');

const db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function() {
  // we're connected!
  console.log("mongoDB connected");
});

// 2. Create a new instance of express
const app = express();

// 13. use bodyparser middleware with express
app.use(bodyParser.json());


// 8.   db of users
const users = [
  {
    id: 1,
    name: 'Dale Cooper'
  },
  {
    id: 2,
    name: 'Spike Spiegel'
  }
];


// 3. Set our port to server the application on
const PORT = 8001;


// 6. / route
app.get("/", (request, response) => {
  console.log("/route was called");
  return response.json({
    that: "works for /"
  });
});

// 5. users route
app.get("/users", (request, response) => {
  console.log("/users route was called ", users);
  return response.json(users);
});

//9. users/id
app.get('/users/:id', (request, response) => {
  console.log(request.params.id);
  // return response.json(null);
  const foundUser = users.find((user) => {
    return String(user.id) === request.params.id
  });
  console.log(foundUser);
  return response.json(foundUser || null);
});

// 14. delete
app.delete('/users/:id', (request, response) => {
  console.log(request.params.id)
  const foundUser = users.find((user) => {
    return String(user.id) === request.params.id;
  });
  // @TODO: implement removal
    console.log("retrun roundUser", foundUser);
  return response.json(foundUser || null);
});

// 10.  post to users array
app.post("/users", (request, response) => {
//  console.log(request);
  const user = {
    id: users.length + 1,
    ...request.body
  };
  users.push(user);
  return response.json(user);
});



// 7.  default message route
app.get('/*', (request, response) => {
  return response.json({
    message:  "not implmented yet"
  });
});


// 4. Tell our instance of express to listen to request made on our port
app.listen(PORT, (err) => {
  if (err) {
    return console.log('Error!', err);  // error handler just in cases
  }
  return console.log('Listening on: http://localhost:' + PORT)
});
